
stages:
  - unit-test
  - e2e-test
  - build
# to cache both npm modules and Cypress binary we use environment variables
# to point at the folders we can list as paths in "cache" job settings
variables:
  npm_config_cache: "$CI_PROJECT_DIR/.npm"
  CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .npm
    - cache/Cypress

Karma:
  image: circleci/node:10-browsers
  script:
    - npm ci
    - npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
  stage: unit-test
  tags:
  - ci-test

Cypress:
  image: cypress/base:10
  stage: e2e-test
  tags:
  - ci-test
  script:
    # check Cypress binary path and cached versions
    # useful to make sure we are not carrying around old versions
    - npm ci
    - npx cypress cache path
    - npx cypress cache list
    - npm run cy:verify
    - npm run cy:info
    # start the server in the background
    - npm run start:ci &
    # run Cypress test in load balancing mode
    - npm run e2e:record -- --parallel --group "electrons on GitLab CI"
  artifacts:
    when: always
    paths:
      - cypress/videos/**/*.mp4
      - cypress/screenshots/**/*.png
    expire_in: 1 day
  #  except:
#  - tags

electrons-1:
  extends: .Cypress
electrons-2:
  extends: .Cypress
electrons-3:
  extends: .Cypress
electrons-4:
  extends: .Cypress
electrons-5:
  extends: .Cypress

Build:
  stage: build
  tags:
  - docker
  script:
  - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD docker.texta.ee
  - python ./docker/build_and_push.py
  - docker system prune --volumes -f
  only:
  - master
