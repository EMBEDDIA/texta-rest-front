services:
    - name: docker.texta.ee/texta/texta-rest:latest
      alias: texta-rest
    - name: docker.texta.ee/texta/mlp:latest
      alias: texta-mlp
    - name: redis:latest
    - name: postgres:11
      alias: texta-postgres

variables:
    DJANGO_DATABASE_ENGINE: "django.db.backends.postgresql"
    DJANGO_DATABASE_NAME: docker
    DJANGO_DATABASE_USER: docker
    DJANGO_DATABASE_PASSWORD: docker
    DJANGO_DATABASE_HOST: texta-postgres
    DJANGO_DATABASE_PORT: 5432
    POSTGRES_DATABASE: docker
    POSTGRES_USER: docker
    POSTGRES_PASSWORD: docker
    TEXTA_ES_URL: http://172.17.0.1:9200
    TEXTA_MLP_URL: http://texta-mlp:5000
    TEXTA_REDIS_URL: redis://redis:6379/0
    TEXTA_API_URL: http://texta-rest
    TEXTA_USE_CSRF: "False"
    npm_config_cache: "$CI_PROJECT_DIR/.npm"
    CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"
    FF_NETWORK_PER_BUILD: 1

stages:
  - unit-test
  - e2e-test
  - build

Karma:
  image: circleci/node:10-browsers
  script:
    - npm ci
    - npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
  stage: unit-test
  tags:
  - ci-test

Cypress:
  image: cypress/base:10
  stage: e2e-test
  tags:
    - ci-test
  before_script:
    - npm ci
  script:
    - npm run cy:verify
    - npm run cy:info
    - npm run cypress:ci
  artifacts:
    when: always
    paths:
      - cypress/videos/**/*.mp4
      - cypress/screenshots/**/*.png
    expire_in: 1 day

Build:
  stage: build
  tags:
  - docker
  script:
  - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD docker.texta.ee
  - python ./docker/build_and_push.py
  - docker system prune --volumes -f
  only:
  - tags
